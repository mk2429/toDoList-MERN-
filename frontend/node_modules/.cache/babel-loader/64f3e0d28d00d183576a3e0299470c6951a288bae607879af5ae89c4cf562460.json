{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\ToDoListUsingTypeScript\\\\my-app\\\\src\\\\Components\\\\ListItems.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import { useInputArray } from \"../Contexts/InputArrayContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListItems = props => {\n  _s();\n  var [isChecked, setChecked] = useState(false);\n  // const inputArray = useInputArray()\n  // var [allTaskArray,setAllTaskArray]=useState([])\n  async function deleteTask(task) {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/deleteTask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          task: task\n        })\n      });\n      const data = await response.json();\n      props.onDelete();\n      // setAllTaskArray(data)\n    } catch (error) {\n      throw new Error(\"Error adding task\");\n    }\n  }\n  function toggleLineThrough(itemid) {\n    const element = document.getElementById(itemid);\n    if (element) {\n      if (element.style.textDecoration === \"none\") {\n        element.style.textDecoration = \"line-through\";\n      } else {\n        element.style.textDecoration = \"none\";\n      }\n    }\n  }\n  function makeListItem(_ref) {\n    let {\n      item,\n      index\n    } = _ref;\n    const itemId = `item${index}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lidiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"liItem\",\n        style: {\n          background: \"blue\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: itemId,\n          style: {\n            color: \"white\",\n            width: \"80%\",\n            wordWrap: \"break-word\"\n          },\n          onClick: () => toggleLineThrough(itemId),\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 69\n        }, this), \" \", /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"delete\",\n          onClick: () => deleteTask(item),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            style: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 216\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"allTaskDiv\",\n    children: props.allTaskArray.map((item, index) => makeListItem({\n      item,\n      index\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n_s(ListItems, \"P/0hK6/DbF+M+sQlrrxI3A2Z4ZU=\");\n_c = ListItems;\nvar _c;\n$RefreshReg$(_c, \"ListItems\");","map":{"version":3,"names":["React","useState","IconButton","DeleteIcon","jsxDEV","_jsxDEV","ListItems","props","_s","isChecked","setChecked","deleteTask","task","response","fetch","method","headers","body","JSON","stringify","data","json","onDelete","error","Error","toggleLineThrough","itemid","element","document","getElementById","style","textDecoration","makeListItem","_ref","item","index","itemId","className","children","background","id","color","width","wordWrap","onClick","fileName","_jsxFileName","lineNumber","columnNumber","allTaskArray","map","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ToDoListUsingTypeScript/my-app/src/Components/ListItems.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n// import { useInputArray } from \"../Contexts/InputArrayContext\";\r\n\r\ntype allTaskArrayType={\r\nallTaskArray:string[];\r\nonDelete:()=>void\r\n}\r\nexport const ListItems = (props:allTaskArrayType) => {\r\n    var [isChecked, setChecked] = useState(false);\r\n    // const inputArray = useInputArray()\r\n// var [allTaskArray,setAllTaskArray]=useState([])\r\n    async function deleteTask(task: string) {\r\n            try {\r\n                const response = await fetch(\"http://localhost:5000/api/deleteTask\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({ task: task })\r\n                });\r\n                const data = await response.json();\r\n                props.onDelete()\r\n                // setAllTaskArray(data)\r\n            } catch (error) {\r\n                throw new Error(\"Error adding task\");\r\n            }\r\n        \r\n    }\r\n\r\n    type makeListItemType = {\r\n        item: string;\r\n        index: number\r\n    }\r\n    function toggleLineThrough(itemid: string) {\r\n        const element = document.getElementById(itemid);\r\n        if (element) {\r\n            if (element.style.textDecoration === \"none\") {\r\n                element.style.textDecoration = \"line-through\"\r\n            }\r\n            else {\r\n                element.style.textDecoration = \"none\"\r\n            }\r\n        }\r\n\r\n    }\r\n    function makeListItem({ item, index }: makeListItemType) {\r\n        const itemId = `item${index}`\r\n        return (\r\n            <div className=\"lidiv\">\r\n                <div className=\"liItem\" style={{background:\"blue\"}}><div key={index} id={itemId} style={{ color: \"white\", width: \"80%\", wordWrap: \"break-word\" }} onClick={()=>toggleLineThrough(itemId)}>{item}</div> <IconButton aria-label=\"delete\" onClick={() => deleteTask(item)}>\r\n                    <DeleteIcon style={{ color: \"white\" }} />\r\n                </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div className=\"allTaskDiv\">\r\n\r\n        {props.allTaskArray.map((item, index) => makeListItem({ item, index }))}\r\n\r\n    </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}