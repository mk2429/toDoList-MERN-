{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Keycloak from \"keycloak-js\";\nconst keycloakConfig = {\n  url: \"http://127.0.0.1:8080\",\n  realm: \"ToDoList\",\n  clientId: \"toDoApp\"\n};\nexport const UseAuth = () => {\n  _s();\n  const [isLogin, setLogin] = useState(false);\n  const [userName, setUserName] = useState(undefined);\n  useEffect(() => {\n    let keycloak = null;\n    const initializeKeycloak = async () => {\n      keycloak = Keycloak(keycloakConfig);\n      try {\n        var _keycloak$idTokenPars;\n        await keycloak.init({\n          onLoad: \"login-required\"\n        });\n        setLogin(true);\n        setUserName(((_keycloak$idTokenPars = keycloak.idTokenParsed) === null || _keycloak$idTokenPars === void 0 ? void 0 : _keycloak$idTokenPars.name) || \"buddy\");\n      } catch (error) {\n        console.error(\"Keycloak initialization error:\", error);\n      }\n    };\n    initializeKeycloak();\n    return () => {\n      if (keycloak) {\n        keycloak.logout();\n      }\n    };\n  }, []);\n  return {\n    isLogin,\n    userName\n  };\n};\n_s(UseAuth, \"0EekPzByUau57FMMDWBmqtyBNgY=\");\n_c = UseAuth;\nvar _c;\n$RefreshReg$(_c, \"UseAuth\");","map":{"version":3,"names":["useState","useEffect","Keycloak","keycloakConfig","url","realm","clientId","UseAuth","_s","isLogin","setLogin","userName","setUserName","undefined","keycloak","initializeKeycloak","_keycloak$idTokenPars","init","onLoad","idTokenParsed","name","error","console","logout","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ToDoListUsingTypeScript/my-app/src/UseAuth.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Keycloak, { KeycloakInstance, KeycloakTokenParsed } from \"keycloak-js\";\r\n\r\nconst keycloakConfig = {\r\n  url: \"http://127.0.0.1:8080\",\r\n  realm: \"ToDoList\",\r\n  clientId: \"toDoApp\"\r\n};\r\n\r\nexport const UseAuth = () => {\r\n  const [isLogin, setLogin] = useState(false);\r\n  const [userName, setUserName] = useState<string | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    let keycloak: KeycloakInstance | null = null;\r\n\r\n    const initializeKeycloak = async () => {\r\n      keycloak = Keycloak(keycloakConfig);\r\n      try {\r\n        await keycloak.init({ onLoad: \"login-required\" });\r\n        setLogin(true);\r\n        setUserName(\r\n          keycloak.idTokenParsed?.name || \"buddy\"\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Keycloak initialization error:\", error);\r\n      }\r\n    };\r\n\r\n    initializeKeycloak();\r\n\r\n    return () => {\r\n      if (keycloak) {\r\n        keycloak.logout();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isLogin,\r\n    userName\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAAgBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAiD,aAAa;AAE7E,MAAMC,cAAc,GAAG;EACrBC,GAAG,EAAE,uBAAuB;EAC5BC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAqBa,SAAS,CAAC;EAEvEZ,SAAS,CAAC,MAAM;IACd,IAAIa,QAAiC,GAAG,IAAI;IAE5C,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrCD,QAAQ,GAAGZ,QAAQ,CAACC,cAAc,CAAC;MACnC,IAAI;QAAA,IAAAa,qBAAA;QACF,MAAMF,QAAQ,CAACG,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAiB,CAAC,CAAC;QACjDR,QAAQ,CAAC,IAAI,CAAC;QACdE,WAAW,CACT,EAAAI,qBAAA,GAAAF,QAAQ,CAACK,aAAa,cAAAH,qBAAA,uBAAtBA,qBAAA,CAAwBI,IAAI,KAAI,OAClC,CAAC;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDN,kBAAkB,CAAC,CAAC;IAEpB,OAAO,MAAM;MACX,IAAID,QAAQ,EAAE;QACZA,QAAQ,CAACS,MAAM,CAAC,CAAC;MACnB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLd,OAAO;IACPE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAjCWD,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}