{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\ToDoListUsingTypeScript\\\\my-app\\\\src\\\\Contexts\\\\InputArrayContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useReducer, createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputArrayContext = /*#__PURE__*/createContext(undefined);\nconst TasksListReducer = (state, action) => {\n  const addTask = async task => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/addTask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          task: task\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error adding task\", error);\n    }\n  };\n  const deleteTask = async task => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/deleteTask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          task: task\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error deleting task\", error);\n    }\n  };\n  switch (action.type) {\n    case \"Add\":\n      addTask(action.task);\n      return [...state, action.task];\n    case \"Delete\":\n      deleteTask(action.task);\n      return state.filter(item => item !== action.task);\n  }\n};\n_c = TasksListReducer;\nexport const InputArrayProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [TasksList, dispatch] = useReducer(TasksListReducer, []);\n  return /*#__PURE__*/_jsxDEV(InputArrayContext.Provider, {\n    value: {\n      TasksList,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(InputArrayProvider, \"W6vM6hex4aAIlZDEjtOSNUfT7xc=\");\n_c2 = InputArrayProvider;\nexport const useInputArray = () => {\n  _s2();\n  const context = useContext(InputArrayContext);\n  if (!context) {\n    throw new Error('Error with Input provider');\n  }\n  return context;\n};\n_s2(useInputArray, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c, _c2;\n$RefreshReg$(_c, \"TasksListReducer\");\n$RefreshReg$(_c2, \"InputArrayProvider\");","map":{"version":3,"names":["React","useReducer","createContext","useContext","jsxDEV","_jsxDEV","InputArrayContext","undefined","TasksListReducer","state","action","addTask","task","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","deleteTask","type","filter","item","_c","InputArrayProvider","_ref","_s","children","TasksList","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c2","useInputArray","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ToDoListUsingTypeScript/my-app/src/Contexts/InputArrayContext.tsx"],"sourcesContent":["import React, { useState, useReducer, useEffect, createContext, useContext } from \"react\";\r\n\r\ntype InputArrayType = {\r\n  TasksList: string[];\r\n  dispatch: React.Dispatch<TaskListAction>;\r\n};\r\n\r\ntype InputArrayProviderType = {\r\n  children: React.ReactNode;\r\n};\r\n\r\ntype TaskListAction = {\r\n  type: \"Add\" | \"Delete\";\r\n  task: string;\r\n};\r\n\r\nconst InputArrayContext = createContext<InputArrayType | undefined>(undefined);\r\n\r\nconst TasksListReducer = (state: string[], action: TaskListAction): string[] => {\r\n  const addTask = async (task: string) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/addTask\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ task:task })\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(\"Error adding task\", error);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (task: string) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/deleteTask\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ task:task })\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(\"Error deleting task\", error);\r\n    }\r\n  };\r\n\r\n  switch (action.type) {\r\n    case \"Add\":\r\n      addTask(action.task);\r\n      return [...state, action.task];\r\n      \r\n    case \"Delete\":\r\n      deleteTask(action.task);\r\n      return state.filter(item => item !== action.task);\r\n  }\r\n};\r\n\r\nexport const InputArrayProvider = ({ children }: InputArrayProviderType) => {\r\n  const [TasksList, dispatch] = useReducer(TasksListReducer, []);\r\n\r\n  return (\r\n    <InputArrayContext.Provider value={{ TasksList, dispatch }}>\r\n      {children}\r\n    </InputArrayContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useInputArray = (): InputArrayType => {\r\n  const context = useContext(InputArrayContext);\r\n  if (!context) {\r\n    throw new Error('Error with Input provider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}